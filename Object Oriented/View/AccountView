/**
 * @author Nicole Runas
 * @since 11-14-2018
 * 
 * This is the view for the account view
 */
package acctMgr.view;

import javax.swing.*;

import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.math.BigDecimal;

import acctMgr.controller.*;
import acctMgr.model.*;

public class AccountView extends JFrameView
{
	public static final String DEPOSIT = "Deposit"; 
	public static final String WITHDRAW = "Withdraw"; 
	public static final String SAVE = "Save";
	public static final String SAVEAEXIT = "Save and Exit";
	public static final String EMPTY = " Enter an amount:";
	
	private JTextField textField = new JTextField();
	public JTextField tf2 = new JTextField("0");
 
	/**
	 * Constructor for account view. Also sets the size of the window,
	 * adds buttons for depositing and withdrawing, adds labels for clarity,
	 * and adds those all to the panel.
	 * 
	 * @param account
	 * @param controller
	 */
	public AccountView(Account account, Controller controller) 
	{
		super(account, controller);
		
		JLabel chosenAccount = new JLabel(account.getName());
		JLabel currBal = new JLabel("Current Balance:");
		JLabel balance = new JLabel(account.getBalance().toString());
		
		JPanel APanel = new JPanel();		
        JPanel labelPanel = new JPanel();
        labelPanel.add(chosenAccount, BorderLayout.WEST);
		labelPanel.add(currBal, BorderLayout.AFTER_LAST_LINE);
		labelPanel.add(balance, BorderLayout.AFTER_LAST_LINE);
		
		Handler handler = new Handler();
		
		JButton buttonD = new JButton(DEPOSIT);
		buttonD.addActionListener(new ActionListener() 
				{  
			public void actionPerformed(ActionEvent e) 
			{
				account.deposit(BigDecimal.valueOf(Double.valueOf(tf2.getText())));
				balance.setText(account.getBalance().toString());
				balance.updateUI();
		    }  
				});
		JButton buttonW = new JButton(WITHDRAW);
		buttonW.addActionListener(new ActionListener() 
				{  
			public void actionPerformed(ActionEvent e) 
			{
				try 
				{
					account.withdraw(BigDecimal.valueOf(Double.valueOf(tf2.getText())));
				} 
				catch (NumberFormatException e1) 
				{
					e1.printStackTrace();
				} 
				catch (OverdrawException e1) 
				{
					e1.printStackTrace();
				}
				balance.setText(account.getBalance().toString());
				balance.updateUI();
			} 
			});
		
		JButton buttonS = new JButton(SAVE);
		buttonS.addActionListener(handler);
		JButton buttonSE = new JButton(SAVEAEXIT);
		buttonSE.addActionListener(handler);
		JLabel button = new JLabel(EMPTY);
	
		this.setSize(350, 350);
		this.setTitle("Account View");
		
		APanel.setLayout(new GridLayout(3, 1, 5, 5));
		
		this.getContentPane().add(labelPanel, BorderLayout.NORTH);
		this.getContentPane().add(APanel);
		
		APanel.add(button);
		APanel.add(tf2);
		APanel.add(buttonD);
		APanel.add(buttonW);
		APanel.add(buttonS);
		APanel.add(buttonSE);
		
		this.add(APanel);
	}

	/**
	 * Notifies the model of a change
	 */
	public void modelChanged(ModelEvent event) 
	{
		String msg = event.getBalance() + "";
		textField.setText(msg);
	}
	/**
	 * The handler class that handles the action listener
	 *
	 */
	class Handler implements ActionListener
	{  
		public void actionPerformed(ActionEvent e) 
		{
			try 
			{
				((AccountViewController)getController()).operation(e.getActionCommand());
			} catch (IOException e1) 
			{
				e1.printStackTrace();
			}
	    } 
	}
	/**
	 * This is just a getter method for the amount entered into the text field
	 * 
	 * @return amount, the amount entered into the text field
	 */
	public BigDecimal getAmount()
	{
		BigDecimal amount = new BigDecimal(tf2.getText());
		return amount;
	}
}
